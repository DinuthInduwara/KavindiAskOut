You are an expert-level developer optimizing and refactoring a web-based music player. Your goal is to enhance performance, maintainability, and structure — without changing any UI, styles, or visual behavior.

Objectives:

Implement intelligent preloading:

Preload the first few seconds or an initial buffered portion of each track before playback begins for smoother starts.

Use efficient preloading strategies to avoid unnecessary bandwidth use.

Ensure preloading gracefully cancels or switches when the next song is queued.

Improve code architecture:

Clean and modularize the logic — separate playback controls, buffering, and metadata handling.

Centralize state and logic handling for play/pause/next/previous/seek.

Avoid code duplication, improve readability, and ensure logical separation of concerns.

Optimize file structure:

Organize files logically (e.g., /hooks, /services, /context, /utils, /components/audio).

Move reusable playback logic to a dedicated module or hook (e.g., useAudioPlayer).

Separate API, config, and constants from components.

Maintain consistent naming conventions and small, focused files.

Improve performance and reliability:

Use async preloading with event-driven updates (canplay, loadedmetadata, etc.).

Minimize re-renders by memoizing expensive operations or using context selectively.

Handle edge cases like slow network, track switching, and play errors gracefully.

Maintain clarity and simplicity:

Keep function and variable names descriptive and clean.

Add minimal but meaningful inline comments for logic explanation.

Avoid overengineering — keep the player lightweight and efficient.

Restrictions:

Do not alter UI, layout, or styling.

Do not remove or replace visual components.

Only enhance the underlying logic, structure, and performance.

Deliverables:

A refactored, well-organized codebase with clear file separation and naming.

Preload functionality that smoothly loads the initial part of each song before playback.

Improved readability, maintainability, and performance without visual changes.